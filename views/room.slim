script src="../js/private.js"
- if session[:login_key] != nil && RoomUser.first(room_id: @room.id, user_id: User.first(login_key: session[:login_key]).id)
  .chatwindow
    table#chat.table
      tbody

  #chatcontrols
    form.form-stacked name ="chat"
      .form-actions
        .control-group
          input#msg.input-xlarge placeholder=("Type somethingâ€¦") type="text"
        div
          input#send.btn type="submit" value="Send"
          input#clear.btn type="button" value=("Clear Chat")

  script src="http://code.jquery.com/jquery-1.7.2.min.js"
  script src="/js/bootstrap.js"
  script src="/js/app.js"
  script charset="utf-8" type="text/javascript"
/#Title

#Members
  .title
    h1 #{@room.name}
    h1  #{@users.length} / #{@room.size}
    p id="current" #{@users.length}
    p id="roomsize" #{@room.size}


  /ul id="memberlist"

  - for person in @users
    //Avatar image
    span
      img src="#{person.avatar}"
    span  #{person.alias}
    - if person.login_provider == "Steam" || @room.creator_id == session[:login_key] || session[:admin]
      .dropdown id="userdropdown"
        button#dropdownMenu1.btn.btn-default.dropdown-toggle aria-expanded="true" data-toggle="dropdown" type="button"
          span.caret
        ul.dropdown-menu aria-labelledby="dropdownMenu1" role="menu"
          - if person.login_provider == "Steam"
            li role="presentation"
              a href="steam://friends/add/#{person.login_key}" Add on Steam
          - if @room.creator_id == session[:login_key] || session[:admin]
            li role="presentation"
              a href="#{@room.url}/removeplayer/#{person.id}" Remove from group
            /form action='#{@room.url}/removeplayer/#{person.id}' method='post' style='display:inline;'
              /input id='remove_button' type='image' src="/img/cross.png //When clicking image, show/hide the report field. Linked to private.
    - @amountofusers += 1
    /The time that each player is available to play.
    span id='time'  #{(RoomUser.first(user_id: person.id, room_id: @room.id)).ready_until.strftime("%H:%M")}
    - (RoomUser.first(user_id: person.id, room_id: @room.id)).check_time
    br

.checkin
  - if session[:member]
    a href="#" onclick="hidereport();"
      img src="/img/flag.png" id="flag" style="cursor:pointer" Report abusive behavior

  form action='/checkin' method='post'
    p #{session[:alias]}

    - if session[:member] == true && !@user.in_room?(@room) && @room.size > @amountofusers
      select name ='hour' id='hour'
        - x = 0
        - 24.times do
          - y = "%02d" % x
          option value="#{y}"  #{y}
          - x += 1

      select name ='minute' id='minute'
        - x = 0
        - 12.times do
          - y = "%02d" % x
          option value="#{y}"  #{y}
          - x += 5
      br
      - if @room.size > @amountofusers
        input id='checkin_button' type='submit' value='Check in!'
      - else
        h1 Room is full!
    input type="hidden" name="id" value="#{@room.id}"
  form action='/checkout' method='post'
    - if session[:member] == true && RoomUser.first(room_id: @room.id, user_id: (User.first(login_key: session[:login_key])).id) != nil
      input id='checkout_button' type='submit' value='Check out!'
    input type="hidden" name="id" value="#{@room.id}"
  form action='/sendreport' method='post'
    select name='reportname' id='reportname' style="visibility: hidden"
      -for person in @users
        option value="#{person.alias}" Report #{person.alias}
    input type="text" id='reportdescription' name='reportdescription' style="visibility: hidden; height:25px "
    input type="submit" id="submit" style="visibility: hidden" value="Send report"



